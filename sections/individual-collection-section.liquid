{%- style -%}
    #shopify-section-{{ section.id }} {

        --button-background: {{ section.settings.color_button_backgroun }};
        --color-button-label: {{ section.settings.color_button_label }};
        --hover-button-background: {{ section.settings.hover_color_button_backgroun }};
        --hover-color-label: {{ section.settings.hover_color_button_label }};

        --color-text: {{ section.settings.color_text }};
    }
  .products .card__heading a:hover {
    color: var(--color-text);
  }
  .products .card__heading a {
    color: var(--color-text);
  }
  .card__description.truncate_description{
    color: var(--color-text);
  }
  .card-information>.price {
    color: var(--color-text) !important;
  }
  .price-item.price-item--regular{
    color: var(--color-text) !important;
  }
{%- endstyle -%}
<script src="{{ 'product-info.js' | asset_url }}" defer="defer"></script>
<script src="{{ 'price-per-item.js' | asset_url }}" defer="defer"></script>

{% assign collection = section.settings.section_collection %}
<section class="product-collection">
  <div class="page-width">
    {% if section.settings.section_header != blank %}
    <h2 class="title" style='color: {{section.settings.color_title }}; font-size: {{section.settings.font_size}}px;'>{{section.settings.section_header}}</h2>
    {% endif %}
    <div class="product-collection__wrapper">
      {% for product in collection.products %}
        {% render 'card-product-new', card_product: product %}
      {% endfor %}
    </div>
  </div>
</section>

{%- if request.design_mode -%}
  <script src="{{ 'theme-editor.js' | asset_url }}" defer="defer"></script>
{%- endif -%}
<script src="{{ 'product-form.js' | asset_url }}" defer="defer"></script>
{% comment %} <script>
  document.addEventListener('DOMContentLoaded', function () {
    function updatePrice(element, dataPrice, elementSum) {
      let quantityInput = Number(element.querySelector('.quantity__input').value);
      let unitPrice = dataPrice;

      if (quantityInput >= 10) {
        unitPrice *= 0.75;
      }

      const formattedNumber = (unitPrice / 100).toFixed(2);
      const [integerPart, decimalPart] = formattedNumber.split('.');

      elementSum.innerHTML = `
            <span class="product-form__price_rcp">     
              $${integerPart}.<sup class="price-cent">${decimalPart}</sup>
            </span>
          `;
    }

    const buttonsWrapper = document.querySelectorAll('.wrapper-baton-and-quantity');

    buttonsWrapper.forEach((element) => {
      const addToCartButton = element.querySelector('.product-form__submit');
      let dataPrice = parseFloat(element.querySelector('.product-form__price').getAttribute('data-price'));
      let quantityButtons = element.querySelectorAll('.quantity__button');
      let dataVariantId = element.querySelector('.product-form__price').getAttribute('data-variant');
      let elementSum = element.querySelector('.product-form__price_rcp');
      let quantityInputElement = element.querySelector('.quantity__input');
      addToCartButton.addEventListener('click', (e) => {
        e.preventDefault();

        let formData = {
          items: [
            {
              id: dataVariantId,
              quantity: quantityInputElement.value,
            },
          ],
        };
        fetch(window.Shopify.routes.root + 'cart/add.js', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json',
          },
          body: JSON.stringify(formData),
        })
          .then((response) => {
            return response.json();
          })
          .catch((error) => {
            console.error('Error:', error);
          });
      });

      quantityInputElement.addEventListener('change', () => {
        updatePrice(element, dataPrice, elementSum);
      });

      quantityButtons.forEach((button) => {
        button.addEventListener('click', () => {
          updatePrice(element, dataPrice, elementSum);
        });
      });
    });
  });
</script> {% endcomment %}

{% schema %}
{
  "name": "Individual Collection",
  "settings": [
    {
      "type": "collection",
      "id": "section_collection",
      "label": "Collection"
    },
    {
      "type": "text",
      "id": "section_header",
      "label": "Section Header"
    },
    {
      "type": "text",
      "id": "font_size",
      "label": "Font Size Enter Number"
    },
    {
      "type": "color",
      "id": "color_title",
      "label": "Color Title Label",
      "default": "#383633"
    },
    {
      "type": "color",
      "id": "color_heading",
      "label": "Color Heading Card",
      "default": "#fff"
    },
    {
      "type": "text",
      "id": "font_size4",
      "label": "Font Size Text"
    },
    {
      "type": "color",
      "id": "color_item",
      "label": "Color item",
      "default": "#383633"
    },
    {
      "type": "text",
      "id": "font_size3",
      "label": "Font Size Text"
    },
    {
      "type": "color",
      "id": "color_description",
      "label": "Color Description",
      "default": "#d5cfc4"
    },
    {
      "type": "text",
      "id": "font_size2",
      "label": "Font Size Text"
    },
    {
      "type": "color",
      "id": "color_text",
      "label": "Color Text",
      "default": "#383633"
    },
    {
      "type": "text",
      "id": "font_size1",
      "label": "Font Size Text"
    },
    {
      "type": "color",
      "id": "color_button_backgroun",
      "label": "Button Background Color",
      "default": "#383633"
    },
    {
      "type": "color",
      "id": "color_button_label",
      "label": "Button Color Label",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "hover_color_button_backgroun",
      "label": "Hover Button Background Color",
      "default": "#fff"
    },
    {
      "type": "color",
      "id": "hover_color_button_label",
      "label": "Hover Button Color Label",
      "default": "#d5cfc4"
    } 
  ],
  "presets": [
    {
      "name": "Individual Collection"
    }
  ]
}
{% endschema %}
